


//*****************************************************************************
//*****************************************************************************
struct PS_INPUT
{
    float4 position         : SV_Position;
    float2 texCoord0	    : TEXCOORD0;
};



struct PS_OUTPUT
{
    float4 RGBColor : SV_TARGET;  // Pixel color
};

#define g_fNumSamples 6.0f
#define g_Center float2(0.5f,0.5f)

Texture2D diffuseMap : register(t0);
SamplerState MeshTextureSampler : register(s0);

PS_OUTPUT mainPS( PS_INPUT In ) 
{ 
    PS_OUTPUT Output;
   
    float adjustedLength = .1f;
	float4 final = 0;
  
    for(int i=0; i < g_fNumSamples;i++) 
    {
    	float scale = 1.0f + ((adjustedLength) *(i / (float)(g_fNumSamples - 1.0f)));
    	final += diffuseMap.Sample(MeshTextureSampler,((In.texCoord0.xy - g_Center) * scale) + g_Center );
   	}
   	final /= g_fNumSamples;
 
    // Return the average color of all the samples    
    Output.RGBColor = final;
    
    return Output;
}



